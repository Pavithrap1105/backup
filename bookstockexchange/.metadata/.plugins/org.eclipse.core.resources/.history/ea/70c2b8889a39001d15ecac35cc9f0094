package com.luxoft.bookshop.authorservice.entity;

import java.util.List;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.NotNull;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Entity
@Table(name = "Author")
@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
public class Author {
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private int authorId;

	@NotNull(message = "Author name should not be null")
	@NotEmpty(message = "Author name should not be empty")
	private String authorName;

	public Author(int authorId,
			@NotNull(message = "Author name should not be null") @NotEmpty(message = "Author name should not be empty") String authorName) {
		super();
		this.authorId = authorId;
		this.authorName = authorName;
	}

	@ManyToMany
	@JoinTable(name = "authors_publications", joinColumns = @JoinColumn(name = "author_id"), inverseJoinColumns = @JoinColumn(name = "publication_id"))
	private List<Publication> publications;

	@OneToMany(mappedBy = "author")
	private List<Books> bookList;

	@OneToMany(mappedBy = "author")
	private List<Comics> comicsList;

}
